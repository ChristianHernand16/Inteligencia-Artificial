CREATE (a:Station {name: 'Los Andes', 		latitude: 51.5308, longitude: -0.1238}),
       (b:Station {name: 'Ricon Macula',                    latitude: 51.5282, longitude: -0.1337}),
       (c:Station {name: 'Parrillas del Hector',               latitude: 51.5392, longitude: -0.1426}),
       (d:Station {name: 'DoÃ±a Menestra',       		latitude: 51.5342, longitude: -0.1387}),
       (e:Station {name: 'Ceviches Waza',              latitude: 51.5507, longitude: -0.1402}),
	(f:Station {name: 'Tropi Salon',              latitude: 51.5507, longitude: -0.1402}),
	(g:Station {name: 'Asados Danny',              latitude: 51.5507, longitude: -0.1402}),
	(h:Station {name: 'Burger King',              latitude: 51.5507, longitude: -0.1402}),
	(i:Station {name: 'Pizza Express',              latitude: 51.5507, longitude: -0.1402}),
	(j:Station {name: 'Soccer Burger',              latitude: 51.5507, longitude: -0.1402}),
	(k:Station {name: 'Creta Restaurante',              latitude: 51.5507, longitude: -0.1402}),
	(l:Station {name: 'Foot Grill',              latitude: 51.5507, longitude: -0.1402}),
	(m:Station {name: 'El Carboncito',              latitude: 51.5507, longitude: -0.1402}),
	
	(a)-[:CONNECTION {time:1.1}]->(b),
	(b)-[:CONNECTION {time:2.6}]->(c),
	(b)-[:CONNECTION {time:1.7}]->(g),
	(c)-[:CONNECTION {time:3.5}]->(d),
	(d)-[:CONNECTION {time:3.4}]->(e),
 	(e)-[:CONNECTION {time:3.7}]->(m),	
 	(a)-[:CONNECTION {time:1.2}]->(f),
	(f)-[:CONNECTION {time:1.7}]->(g),
	(g)-[:CONNECTION {time:3.4}]->(h),
	(h)-[:CONNECTION {time:2.4}]->(m),
	(a)-[:CONNECTION {time:1.3}]->(i),
	(i)-[:CONNECTION {time:2}]->(j),
	(j)-[:CONNECTION {time:2.6}]->(k),
	(k)-[:CONNECTION {time:3.8}]->(l),
	(l)-[:CONNECTION {time:3.5}]->(m)



MATCH (start:Station {name: "Los Andes"}), (end:Station {name: "El Carboncito"})
CALL gds.alpha.shortestPath.astar.stream({
  nodeQuery: 'MATCH (p:Station) RETURN id(p) AS id',
  relationshipQuery: 'MATCH (p1:Station)-[r:CONNECTION]->(p2:Station) RETURN id(p1) AS source, id(p2) AS target, r.time AS weight',
  startNode: start,
  endNode: end,
 relationshipWeightProperty: 'weight',
  propertyKeyLat: 'latitude',
  propertyKeyLat: 'longitude'
})
YIELD nodeId, cost
RETURN gds.util.asNode(nodeId).name AS station, cost











